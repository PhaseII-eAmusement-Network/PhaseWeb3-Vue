import{r,u as _,o as f,c as p,e as c,w as s,f as e,_ as h,l as b,g as v,F as w,P as x,i as g,am as k,j as $,k as l,q as y}from"./index-CXK2Nwmi.js";import{_ as C}from"./ArcadeCard-DodJtgU8.js";import{_ as I}from"./GeneralTable-pOIjtJD3.js";import{A}from"./arcade-sDReWpNV.js";const B={class:"bg-white dark:bg-slate-900/95 rounded-2xl lg:flex lg:justify-between"},F={class:"w-full"},D={__name:"MachinesView",setup(N){const t=r({}),o=r(!0),n=_(),i=parseInt(n.params.id);async function d(){try{t.value=null;const a=await A(i);t.value=a,o.value=!1}catch(a){console.error("Failed to fetch arcade data:",a)}}f(()=>{d()});const u=[{text:"PCBID",value:"pcbId",width:200},{text:"Name",value:"description",width:200},{text:"Port",value:"port",sortable:!0,width:120},{text:"OTA",value:"ota",sortable:!0,width:120}],m=a=>{navigator.clipboard.writeText(a.pcbId).then(()=>{alert("Copied to clipboard!")}).catch(()=>{alert("Failed to copy to clipboard!")})};return(a,P)=>(c(),p(y,null,{default:s(()=>[e(h,null,{default:s(()=>[o.value?v("",!0):(c(),b(w,{key:0},[e(C,{class:"mb-6",arcade:t.value,"use-small":!0},null,8,["arcade"]),e(x,{icon:g(k),title:"Machines",main:""},null,8,["icon"]),e($,{"has-table":""},{default:s(()=>[l("div",B,[l("div",F,[e(I,{headers:u,items:t.value.machines,onRowClicked:m},null,8,["items"])])])]),_:1})],64))]),_:1})]),_:1}))}};export{D as default};
