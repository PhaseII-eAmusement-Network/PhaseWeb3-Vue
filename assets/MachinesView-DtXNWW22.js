import{u as S,r as f,a as T,o as F,p as G,c as V,d as c,w as i,e,_ as j,j as _,f as v,F as g,g as m,i as d,P as D,am as R,h as I,Q as B,aZ as Q,v as Z,l as C,a_ as z,aq as H,n as J}from"./index-CZV9MRmx.js";import{_ as u}from"./FormField-BxzsYNTe.js";import{_ as h}from"./FormControl-h3k2K9va.js";import{_ as p}from"./FormCheckRadio-C4_0RGU8.js";import{_ as K}from"./ArcadeCard-BiRovYo5.js";import{_ as L}from"./GeneralTable-duKeEe4G.js";import{g as M}from"./pcbid-CIkJuo1f.js";import{A as W}from"./arcade-C-uxRpkM.js";import{d as X,w as Y,x as ee,y as ae}from"./admin-B2O9OgX0.js";import{_ as le}from"./BaseButtons-CJQCgLd8.js";const te={class:"grid grid-cols-1 lg:grid-cols-2 gap-6"},ne={class:"grid grid-cols-1 w-full gap-2 md:gap-6 md:flex md:place-content-stretch pb-4 md:pb-0"},ie={class:"grid grid-cols-1 w-full gap-2 md:gap-6 md:flex md:place-content-stretch pb-4 md:pb-0"},oe={class:"bg-white dark:bg-slate-900/95 rounded-2xl lg:flex lg:justify-between"},se={class:"w-full"},ge={__name:"MachinesView",setup(ue){const y=S(),s=f({}),P=f(!0),A=T(),$=parseInt(A.params.id);async function b(){try{const o=await W($);s.value=o,P.value=!1}catch(o){console.error("Failed to fetch arcade data:",o)}}F(()=>{b()});const x=[{text:"PCBID",value:"pcbId",sortable:!0,width:200},{text:"Name",value:"description",sortable:!0,width:200},{text:"Port",value:"port",sortable:!0,width:120},{text:"Arcade Machine",value:"data.cabinet",sortable:!0,width:120},{text:"OTA",value:"ota",sortable:!0,width:120}],U=o=>{navigator.clipboard.writeText(o.pcbId).then(()=>{alert("Copied to clipboard!")}).catch(()=>{alert("Failed to copy to clipboard!")})},w={name:"",cabinet:!1,ota:!1,generatePCBID:!0,PCBID:""},l=G({...w}),r=f(null),n=f(null);function k(o){var a=[];for(const t of o)a.push({id:t.pcbId,label:t.description});return a}function E(o){return!o||!s.value.machines?null:(n.value=s.value?.machines?.find(a=>a.pcbId===o),n.value.cabinet=n.value.data.cabinet??!1,!0)}async function O(){for(l.generatePCBID&&(l.PCBID=M());!await X(l.PCBID);)if(l.generatePCBID)l.PCBID=M();else{window.alert("PCBID already in use!");return}Y(s.value.id,{name:l.name,cabinet:l.cabinet,ota:l.ota,PCBID:l.PCBID.toUpperCase()}),Object.assign(l,w),b()}async function N(){n.value&&(await ee(s.value.id,{name:n.value.name,cabinet:n.value.cabinet,ota:n.value.ota,PCBID:n.value.pcbId.toUpperCase()}),n.value=null,r.value=null,b())}async function q(){n.value&&(await ae(s.value.id,n.value?.pcbId??""),n.value=null,r.value=null,b())}return(o,a)=>(c(),V(J,null,{default:i(()=>[e(j,null,{default:i(()=>[P.value?v("",!0):(c(),_(g,{key:0},[e(K,{class:"mb-6",arcade:s.value,"use-small":!0},null,8,["arcade"]),m(y).userAdmin?(c(),_(g,{key:0},[e(D,{icon:m(R),title:"Machine Administration",main:""},null,8,["icon"]),d("div",te,[e(I,{"is-form":"",class:"lg:mb-6"},{default:i(()=>[e(B,{color:"success",label:"Add Machine",icon:m(Q),class:"mb-2"},null,8,["icon"]),d("form",{class:"h-full",onSubmit:a[5]||(a[5]=Z(t=>O(),["prevent"]))},[e(u,{label:"Generate PCBID",help:"Generate a PCBID rather than supply one."},{default:i(()=>[e(p,{modelValue:l.generatePCBID,"onUpdate:modelValue":a[0]||(a[0]=t=>l.generatePCBID=t),"input-value":l.generatePCBID,name:"generatePCBID",type:"switch"},null,8,["modelValue","input-value"])]),_:1}),l.generatePCBID?v("",!0):(c(),V(u,{key:0,label:"PCBID"},{default:i(()=>[e(h,{modelValue:l.PCBID,"onUpdate:modelValue":a[1]||(a[1]=t=>l.PCBID=t),name:"pcbid",required:"",minlength:"20",maxlength:"20"},null,8,["modelValue"])]),_:1})),e(u,{label:"Name"},{default:i(()=>[e(h,{modelValue:l.name,"onUpdate:modelValue":a[2]||(a[2]=t=>l.name=t),name:"name",required:""},null,8,["modelValue"])]),_:1}),d("div",ne,[e(u,{label:"Arcade Cabinet",help:"If this is a real cabinet, enable this."},{default:i(()=>[e(p,{modelValue:l.cabinet,"onUpdate:modelValue":a[3]||(a[3]=t=>l.cabinet=t),"input-value":l.cabinet,name:"cabinet",type:"switch"},null,8,["modelValue","input-value"])]),_:1}),e(u,{label:"Enable Updates",help:"Enables or disables OTA updates."},{default:i(()=>[e(p,{modelValue:l.ota,"onUpdate:modelValue":a[4]||(a[4]=t=>l.ota=t),"input-value":l.ota,name:"ota",type:"switch"},null,8,["modelValue","input-value"])]),_:1})]),e(C,{color:"success",type:"submit",label:"Add Machine"})],32)]),_:1}),e(I,{"is-form":"",class:"mb-6"},{default:i(()=>[e(B,{color:"warning",label:"Edit Machine",icon:m(z),class:"mb-2"},null,8,["icon"]),e(u,{label:"Machine"},{default:i(()=>[e(h,{modelValue:r.value,"onUpdate:modelValue":a[6]||(a[6]=t=>r.value=t),name:"machine",options:k(s.value.machines),required:""},null,8,["modelValue","options"])]),_:1}),E(r.value)?(c(),_(g,{key:0},[e(u,{label:"Name"},{default:i(()=>[e(h,{modelValue:n.value.name,"onUpdate:modelValue":a[7]||(a[7]=t=>n.value.name=t),name:"name",required:""},null,8,["modelValue"])]),_:1}),d("div",ie,[e(u,{label:"Arcade Cabinet",help:"If this is a real cabinet, enable this."},{default:i(()=>[e(p,{modelValue:n.value.cabinet,"onUpdate:modelValue":a[8]||(a[8]=t=>n.value.cabinet=t),"input-value":n.value.cabinet,name:"cabinet",type:"switch"},null,8,["modelValue","input-value"])]),_:1}),e(u,{label:"Enable Updates",help:"Enables or disables OTA updates."},{default:i(()=>[e(p,{modelValue:n.value.ota,"onUpdate:modelValue":a[9]||(a[9]=t=>n.value.ota=t),"input-value":n.value.ota,name:"ota",type:"switch"},null,8,["modelValue","input-value"])]),_:1})]),e(le,null,{default:i(()=>[e(C,{color:"success",label:"Update Machine",onClick:a[10]||(a[10]=t=>N())}),e(C,{color:"danger",label:"Delete Machine",onClick:a[11]||(a[11]=t=>q())})]),_:1})],64)):v("",!0)]),_:1})])],64)):v("",!0),e(D,{icon:m(H),title:"Machines",main:""},null,8,["icon"]),e(I,{"has-table":""},{default:i(()=>[d("div",oe,[d("div",se,[e(L,{headers:x,items:s.value.machines,onRowClicked:U},null,8,["items"])])])]),_:1})],64))]),_:1})]),_:1}))}};export{ge as default};
