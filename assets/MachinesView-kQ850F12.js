import{b as M,r as _,u as $,o as k,s as U,c as h,e as r,w as n,f as a,_ as N,l as C,g as u,F as I,i as m,P,aU as F,j as B,k as d,y as G,n as T,an as j,q}from"./index-BzYv6Vb0.js";import{_ as o}from"./FormField-DuF-7BFi.js";import{_ as g}from"./FormControl-Z8OoTgT_.js";import{_ as c}from"./FormCheckRadio-C4Yu5p4H.js";import{_ as E}from"./ArcadeCard-DGjjDmKh.js";import{_ as O}from"./GeneralTable-Diu8r_Ya.js";import{g as D}from"./pcbid-CIkJuo1f.js";import{A as S}from"./arcade-BZogXGtq.js";import{a as R,o as z}from"./admin-PBRqi0K7.js";const H={class:"grid grid-cols-1 w-full gap-2 md:gap-6 md:flex md:place-content-stretch pb-4 md:pb-0"},J={class:"bg-white dark:bg-slate-900/95 rounded-2xl lg:flex lg:justify-between"},K={class:"w-full"},ne={__name:"MachinesView",setup(L){const v=M(),i=_({}),p=_(!0),w=$(),V=parseInt(w.params.id);async function f(){try{const s=await S(V);i.value=s,p.value=!1}catch(s){console.error("Failed to fetch arcade data:",s)}}k(()=>{f()});const y=[{text:"PCBID",value:"pcbId",sortable:!0,width:200},{text:"Name",value:"description",sortable:!0,width:200},{text:"Port",value:"port",sortable:!0,width:120},{text:"Arcade Machine",value:"data.cabinet",sortable:!0,width:120},{text:"OTA",value:"ota",sortable:!0,width:120}],x=s=>{navigator.clipboard.writeText(s.pcbId).then(()=>{alert("Copied to clipboard!")}).catch(()=>{alert("Failed to copy to clipboard!")})},b={name:"",cabinet:!1,ota:!1,generatePCBID:!0,PCBID:""},e=U({...b});async function A(){for(e.generatePCBID&&(e.PCBID=D());!await R(e.PCBID);)if(e.generatePCBID)e.PCBID=D();else{window.alert("PCBID already in use!");return}z(i.value.id,{name:e.name,cabinet:e.cabinet,ota:e.ota,PCBID:e.PCBID.toUpperCase()}),Object.assign(e,b),f()}return(s,t)=>(r(),h(q,null,{default:n(()=>[a(N,null,{default:n(()=>[p.value?u("",!0):(r(),C(I,{key:0},[a(E,{class:"mb-6",arcade:i.value,"use-small":!0},null,8,["arcade"]),m(v).userAdmin?(r(),C(I,{key:0},[a(P,{icon:m(F),title:"Add Machine",main:""},null,8,["icon"]),a(B,{"is-form":"",class:"mb-6"},{default:n(()=>[d("form",{class:"h-full",onSubmit:t[5]||(t[5]=G(l=>A(),["prevent"]))},[a(o,{label:"Generate PCBID",help:"Generate a PCBID rather than supply one."},{default:n(()=>[a(c,{modelValue:e.generatePCBID,"onUpdate:modelValue":t[0]||(t[0]=l=>e.generatePCBID=l),"input-value":e.generatePCBID,name:"generatePCBID",type:"switch"},null,8,["modelValue","input-value"])]),_:1}),e.generatePCBID?u("",!0):(r(),h(o,{key:0,label:"PCBID"},{default:n(()=>[a(g,{modelValue:e.PCBID,"onUpdate:modelValue":t[1]||(t[1]=l=>e.PCBID=l),name:"pcbid",required:"",minlength:"20",maxlength:"20"},null,8,["modelValue"])]),_:1})),a(o,{label:"Name"},{default:n(()=>[a(g,{modelValue:e.name,"onUpdate:modelValue":t[2]||(t[2]=l=>e.name=l),name:"name",required:""},null,8,["modelValue"])]),_:1}),d("div",H,[a(o,{label:"Arcade Cabinet",help:"If this is a real cabinet, enable this."},{default:n(()=>[a(c,{modelValue:e.cabinet,"onUpdate:modelValue":t[3]||(t[3]=l=>e.cabinet=l),"input-value":e.cabinet,name:"cabinet",type:"switch"},null,8,["modelValue","input-value"])]),_:1}),a(o,{label:"Enable Updates",help:"Enables or disables OTA updates."},{default:n(()=>[a(c,{modelValue:e.ota,"onUpdate:modelValue":t[4]||(t[4]=l=>e.ota=l),"input-value":e.ota,name:"ota",type:"switch"},null,8,["modelValue","input-value"])]),_:1})]),a(T,{color:"success",type:"submit",label:"Add Machine"})],32)]),_:1})],64)):u("",!0),a(P,{icon:m(j),title:"Machines",main:""},null,8,["icon"]),a(B,{"has-table":""},{default:n(()=>[d("div",J,[d("div",K,[a(O,{headers:y,items:i.value.machines,onRowClicked:x},null,8,["items"])])])]),_:1})],64))]),_:1})]),_:1}))}};export{ne as default};
