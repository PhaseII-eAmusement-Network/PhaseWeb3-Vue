import{u as _,ad as w,r as g,o as v,a as x,c as $,w as l,b as r,f as S,e as t,m as N,P as b,ax as k,_ as y,l as A,n as B,p as H,q as I}from"./index.fd9dd979.js";import{_ as C}from"./GeneralTable.57a0064e.js";const R={__name:"NetworkScores",setup(D){const m=H(),u=I(),d=_();var o=null,a=null;o=m.params.game,a=w(o),a||u.push({name:"ErrorPage",params:{catchAll:"404"}});const i=g([]),n=[{text:"Player",value:"userId",width:100},{text:"Timestamp",value:"timestamp",width:170},{text:"Song",value:"song.name",width:180},{text:"Artist",value:"song.artist",width:180},{text:"Chart",value:"song.chart",width:100},{text:"Grade",value:"data.rank",width:80},{text:"Score",value:"points",width:100}];if(a.scoreHeaders)for(var f of a.scoreHeaders)n.push(f);n.push({text:"Type",value:"type",width:80}),v(async()=>{try{const s=await d.getAttemptData(o);i.value=h(s)}catch(s){console.error("Failed to fetch score data:",s)}});function h(s){var c=[];for(var e of s){if(e.timestamp){const p=new Date(e.timestamp*1e3);e.timestamp=p.toLocaleString(),e.newRecord&&(e.timestamp=`${e.timestamp}
New High Score!`)}e.points&&(e.points=e.points.toString().replace(new RegExp("\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))","g"),",")),c.push(e)}return c}return(s,c)=>(x(),$(B,null,{default:l(()=>[r(A,null,{default:l(()=>[r(S,{icon:t(N),href:`/#/games/${t(o)}`,class:"w-full md:w-auto mb-6",color:"info",label:`${t(a).shortName?t(a).shortName:t(a).name} Home`},null,8,["icon","href","label"]),r(b,{icon:t(k),title:`All ${t(a).shortName?t(a).shortName:t(a).name} Scores`,main:""},null,8,["icon","title"]),r(y,{"has-table":""},{default:l(()=>[r(C,{headers:n,items:i.value},null,8,["items"])]),_:1})]),_:1})]),_:1}))}};export{R as default};
