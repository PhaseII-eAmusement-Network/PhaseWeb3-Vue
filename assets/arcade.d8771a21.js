import{b as s}from"./index.28f1a1ac.js";const t=s();async function d(r){try{return(await t.callApi(`/arcade/${r}`)).arcade}catch(a){throw console.log("Error fetching arcade:",a),a}}async function l(r,a,e){try{return(await t.callApi(`/arcade/${r}/settings?game=${a}&version=${e}`)).data}catch(c){throw console.log("Error fetching arcade settings:",c),c}}async function g(r,a,e,c){try{for(;!t.userId;)await new Promise(n=>setTimeout(n,200));return await t.callApi(`/arcade/${r}/settings?game=${a}&version=${e}`,"POST",c)}catch(o){throw console.log("Error updating settings:",o),o}}async function A(r){try{return await t.callApi(`/arcade/${r}/exportVPN`)}catch(a){throw console.log("Error fetching arcade VPN:",a),a}}async function h(r,a){try{return await t.callApi(`/arcade/${r}`,"POST",a)}catch(e){throw console.log("Error updating arcade:",e),e}}async function u(r){try{return(await t.callApi(`/arcade/${r}/paseli`)).data}catch(a){throw console.log("Error fetching arcade PASELI data:",a),a}}async function w(r){try{const a=await t.callApi(`/arcade/takeover?PCBID=${r}`);return a.status=="warn"&&window.alert(a.error_code),a.data}catch(a){throw console.log("Error fetching takeover:",a),a}}async function P(r){try{return await t.callApi("/arcade/takeover","POST",{PCBID:r})}catch(a){throw console.log("Error saving takeover:",a),a}}export{d as A,A as a,h as b,l as c,g as d,u as e,P as f,w as g};
